{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Siblings.js","Scroll.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","username","email","id","className","src","alt","CardList","Siblings","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","img","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","reduceCards","this","filter","Sibling","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+MAgBeA,EAdF,SAACC,GAAU,IAEZC,EAA0BD,EAA1BC,SAAWC,EAAeF,EAAfE,MAAQC,EAAOH,EAAPG,GAC3B,OACI,yBAAKC,UAAY,uDACf,yBAAKC,IAAG,+BAA2BF,GAAMG,IAAI,eAC7C,6BACI,4BAAKL,GACL,2BAAIC,MCYHK,EAlBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACI,6BAEKA,EAASC,KAAI,SAACC,EAAKC,GACf,OACI,kBAAC,EAAD,CACAC,IAAMD,EACNR,GAAIK,EAASG,GAAGR,GAChBF,SAAUO,EAASG,GAAGV,SACtBC,MAAOM,EAASG,GAAGT,aCCzBW,EAbG,SAAC,GAAmC,EAAjCC,YAAkC,IAApBC,EAAmB,EAAnBA,aAC/B,OACI,yBAAKX,UAAW,OACX,2BACAA,UAAW,mCACXY,KAAM,SACNC,YAAY,YACZC,SAAUH,MCTVP,EAAW,CACpB,CACIL,GAAK,EACLF,SAAW,WACXC,MAAQ,oBACRiB,IAAM,gFAEV,CACIhB,GAAK,EACLF,SAAW,iBACXC,MAAQ,0BACRiB,IAAM,gFAEV,CACIhB,GAAK,EACLF,SAAW,YACXC,MAAQ,oBACRiB,IAAM,uHAEV,CACIhB,GAAK,EACLF,SAAW,UACXC,MAAQ,qBACRiB,IAAM,uHAEV,CACIhB,GAAK,EACLF,SAAW,YACXC,MAAQ,sBACRiB,IAAM,8DCnBCC,EARA,SAACpB,GACX,OACK,yBAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAkBC,OAAQ,UAC7DxB,EAAMyB,WC6BRC,E,kDA3BX,aAAc,IAAD,8BACT,gBAMJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAN1C,EAAKC,MAAQ,CACTxB,SAAUA,EACVM,YAAa,IAJR,E,qDAUF,IAAD,OACAmB,EAAcC,KAAKF,MAAMxB,SAAS2B,QAAO,SAAAC,GAC/C,OAAOA,EAAQnC,SAASoC,cAAcC,SAAS,EAAKN,MAAMlB,YAAYuB,kBACtE,OACI,yBAAKjC,UAAW,MACZ,wBAAIA,UAAW,MAAf,eACA,kBAAC,EAAD,CAAWW,aAAemB,KAAKP,iBAC/B,kBAAC,EAAD,KACK,kBAAC,EAAD,CAAUnB,SAAayB,U,GAnB1BM,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SD2H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e908c47e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    // destructuring\r\n    const { username , email , id } = props;\r\n    return(\r\n        <div className = 'tc bg-light-green br3 pa4 ma2 grow bw2 shadow-5 dib'>\r\n          <img src= {`https://robohash.org/${id}`} alt='my picture' />\r\n          <div>\r\n              <h2>{username}</h2>\r\n              <p>{email}</p>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card ;","import React from 'react';\r\nimport Card from './Card';\r\n// import Siblings from './Siblings';\r\n\r\nconst CardList = ({ Siblings }) => {\r\n    return(\r\n        <div>\r\n         { \r\n             Siblings.map((user,i) => {\r\n                 return (\r\n                     <Card \r\n                     key ={i}\r\n                     id={Siblings[i].id} \r\n                     username={Siblings[i].username} \r\n                     email={Siblings[i].email}\r\n                     />\r\n                 )\r\n             })  \r\n         }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield , searchChange }) => {\r\n    return(\r\n        <div className ='pa2'>\r\n             <input\r\n             className ='pa3 ba b--green bg-lightest-blue'\r\n             type ='search' \r\n             placeholder='SearchBox'\r\n             onChange={searchChange} \r\n             />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","export const Siblings = [\r\n    {\r\n        id : 1,\r\n        username : 'John Doe' ,\r\n        email : 'johndoe@gmail.com',\r\n        img : 'https://pbs.twimg.com/profile_images/781127703395127296/F1r_0Z16_400x400.jpg'\r\n    },\r\n    { \r\n        id : 2,\r\n        username : 'Clement Mosaic' ,\r\n        email : 'clementmosaic@gmail.com',\r\n        img : 'https://pbs.twimg.com/profile_images/849622755049963520/8rxS2hxD_400x400.jpg'\r\n    },\r\n    {\r\n        id : 3,\r\n        username : 'Mr. Gibbs',\r\n        email : 'mrgibbs@gmail.com',\r\n        img : 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_Rf2NrSGSxmDoNnRo7tJ48_Os928InmzkF-tV9EOxvH0baupr&usqp=CAU'\r\n    },\r\n    {\r\n        id : 4,\r\n        username : 'Huskies' ,\r\n        email : 'huskiesi@gamil.com',\r\n        img : 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSszZeS81hsUyEa3SANPtjgj6Q_KOUkMIVN58sa6juCZP3TXKzX&usqp=CAU'\r\n    },\r\n    {\r\n        id : 5,\r\n        username : 'Elon musk' ,\r\n        email : 'muskudbhai@gmai.com',\r\n        img : 'https://encrypted-tbn0.gstatic.com/images?q=tbn%&usqp=CAU'\r\n    }\r\n];","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n     return (\r\n          <div style={{overflowY: 'scroll', border: '5px solid black',height: '500px'}}>\r\n               { props.children }\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Scroll;","import React,{ Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox'; \r\nimport { Siblings } from './Siblings';\r\nimport Scroll from './Scroll'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            Siblings: Siblings,\r\n            searchfield: ''\r\n        }\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })    \r\n    }\r\n     render() {\r\n        const reduceCards = this.state.Siblings.filter(Sibling => {\r\n        return Sibling.username.toLowerCase().includes(this.state.searchfield.toLowerCase())})  \r\n        return (\r\n            <div className ='tc'>\r\n                <h1 className ='f1'>RoBoFrIeNdS</h1>\r\n                <SearchBox searchChange={ this.onSearchChange } />\r\n                <Scroll>\r\n                     <CardList Siblings = { reduceCards } />\r\n                </Scroll>\r\n                {/* <footer className='tc' style={{fontFamily: 'Times-new-roman'}}>\r\n                    This is a webite made from react.js....... \r\n                </footer> */}\r\n            </div> \r\n         );\r\n    }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}